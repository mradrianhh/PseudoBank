// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PseudoBank.EFCore;

#nullable disable

namespace PseudoBank.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230302230836_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PseudoBank.Common.DataModels.Konto", b =>
                {
                    b.Property<int>("Kontonr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Kontonr"));

                    b.Property<decimal>("Bokfsaldo")
                        .HasColumnType("DECIMAL(13,2)");

                    b.Property<DateTime>("Forfallsdato")
                        .HasColumnType("DATE");

                    b.Property<int?>("Kundenr")
                        .HasColumnType("INT");

                    b.Property<decimal>("Motverdi")
                        .HasColumnType("DECIMAL(13,2)");

                    b.Property<string>("ProduktKode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<DateTime>("Åpningsdato")
                        .HasColumnType("DATE");

                    b.HasKey("Kontonr");

                    b.HasIndex("Kundenr");

                    b.HasIndex("ProduktKode");

                    b.ToTable("Konto");
                });

            modelBuilder.Entity("PseudoBank.Common.DataModels.Kunde", b =>
                {
                    b.Property<int>("Kundenr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Kundenr"));

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<int>("Postnummer")
                        .HasColumnType("INT");

                    b.HasKey("Kundenr");

                    b.ToTable("Kunde");
                });

            modelBuilder.Entity("PseudoBank.Common.DataModels.Produkt", b =>
                {
                    b.Property<string>("ProduktKode")
                        .HasColumnType("NVARCHAR(8)");

                    b.HasKey("ProduktKode");

                    b.ToTable("Produkt");
                });

            modelBuilder.Entity("PseudoBank.Common.DataModels.ProduktTjeneste", b =>
                {
                    b.Property<string>("ProduktTjenesteKode")
                        .HasColumnType("NVARCHAR(3)");

                    b.Property<decimal>("Beløp")
                        .HasColumnType("DECIMAL(13,2)");

                    b.Property<DateTime>("Fradato")
                        .HasColumnType("DATE");

                    b.Property<string>("ProduktKode")
                        .HasColumnType("NVARCHAR(8)");

                    b.Property<DateTime>("Tildato")
                        .HasColumnType("DATE");

                    b.HasKey("ProduktTjenesteKode");

                    b.HasIndex("ProduktKode");

                    b.ToTable("ProduktTjeneste");
                });

            modelBuilder.Entity("PseudoBank.Common.DataModels.Konto", b =>
                {
                    b.HasOne("PseudoBank.Common.DataModels.Kunde", null)
                        .WithMany("Kontoer")
                        .HasForeignKey("Kundenr");

                    b.HasOne("PseudoBank.Common.DataModels.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktKode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("PseudoBank.Common.DataModels.ProduktTjeneste", b =>
                {
                    b.HasOne("PseudoBank.Common.DataModels.Produkt", null)
                        .WithMany("ProduktTjenester")
                        .HasForeignKey("ProduktKode");
                });

            modelBuilder.Entity("PseudoBank.Common.DataModels.Kunde", b =>
                {
                    b.Navigation("Kontoer");
                });

            modelBuilder.Entity("PseudoBank.Common.DataModels.Produkt", b =>
                {
                    b.Navigation("ProduktTjenester");
                });
#pragma warning restore 612, 618
        }
    }
}
